/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */


description = 'project t9'
allprojects {
	group = 'rose.mary.trace'
}


subprojects {
    apply plugin: 'maven' //for gradle version 6.x
    //apply plugin:'maven-publish'
	apply plugin: 'java'


	tasks.withType(JavaCompile) {
		options.encoding = 'UTF-8'
	}

	//-----------------------------------------------------------------------------------------------
	// repositories
	//-----------------------------------------------------------------------------------------------
	repositories {
		mavenCentral()
		mavenLocal()
		maven { url "http://idc.mocomsys.com:28081/nexus/content/groups/public"}
		maven { url "https://code.lds.org/nexus/content/groups/main-repo"}
	}

	dependencies {
		// Use JUnit test framework
		testImplementation 'junit:junit:4.12'
 
		
	}
 
}

task removeInstall(type: Delete) {
	println('[delete install files]')
	delete "$projectDir/t9-install-linux/lib"
	followSymlinks = true
}

task makeInstall {

	doLast {
		println('[start makeInstall]')

		//removeInstall
		println('[delete install files]')
		delete "$projectDir/t9-install-linux/lib"

		println('copy t9 lib')
		copy {
			from "$projectDir/t9-console/build/libs/t9-console-1.0.0.jar", "$projectDir/t9-trace/build/libs/t9-trace-1.0.0.jar"
			into "$projectDir/t9-install-linux/lib"
		}
	}
}



task rdist(type: Delete) {
	println('[delete files]')
	delete "$projectDir/dist/t9/lib", "$projectDir/dist/t9/config", "$projectDir/dist/t9-admin/lib", "$projectDir/dist/t9-admin/config"
	followSymlinks = true
}


task dist {

	doLast {
		println('[start distribute]')

		rdist

		println('copy t9 lib')
		copy {
			from "$projectDir/t9-console/build/libs/t9-console-1.0.0.jar", "$projectDir/t9-trace/build/libs/t9-trace-1.0.0.jar"
			into "$projectDir/dist/t9/lib"
		}

		println('copy t9 resources')
		copy {
			from "$projectDir/t9-trace/build/resources/main/config/config.json",
			     "$projectDir/t9-trace/build/resources/main/config/sqlerror.json",
			     "$projectDir/t9-trace/build/resources/main/config/application.yml",
			     "$projectDir/t9-trace/build/resources/main/config/logback-spring.xml"
			into "$projectDir/dist/t9/config"
		}


		println('copy t9-admin lib')
		copy {
			from "$projectDir/t9-admin/build/libs/t9-admin-1.0.0.jar"
			into "$projectDir/dist/t9-admin/lib"
		}

		println('copy t9-admin resources')
		copy {
			from "$projectDir/t9-admin/build/resources/main/config/application.yml",
			     "$projectDir/t9-admin/build/resources/main/config/logback-spring.xml"
			into "$projectDir/dist/t9-admin/config"
		}

	}
}

task ddocker {

	doLast {
		println('[start docker]')
		if(file("$projectDir/docker/t9-linux/t9").exists()){

			println('copy dcoker lib')
			delete "$projectDir/docker/t9-linux/t9/lib"
			copy {
				from "$projectDir/t9-console/build/libs/t9-console-1.0.0.jar", "$projectDir/t9-trace/build/libs/t9-trace-1.0.0.jar"
				into "$projectDir/docker/t9-linux/t9/lib"
			}


			println('copy docker resources')
			delete "$projectDir/docker/t9-linux/t9/config"
			copy {
				from "$projectDir/t9-trace/build/resources/main/config/config.json",
			     	     "$projectDir/t9-trace/build/resources/main/config/sqlerror.json",
				     "$projectDir/t9-trace/build/resources/main/config/application.yml",
				     "$projectDir/t9-trace/build/resources/main/config/logback-spring.xml"

				into "$projectDir/docker/t9-linux/t9/config"
			}
		}
	}
}

task zipinstall(type: Zip) {
    archiveFileName = "t9-install-linux.zip"
    destinationDirectory = file("$projectDir")
    from "$projectDir/t9-install-linux"
}

task zpkg(type: Zip) {
    def date = new Date();
    def formattedDate = date.format('yyyyMMddHHmmss')
    archiveFileName = "t9-V1.0.0-" + formattedDate + ".zip"
    destinationDirectory = file("$projectDir/dist")
    from "$projectDir/dist/t9"
}

task zpkgAdmin(type: Zip) {
    def date = new Date();
    def formattedDate = date.format('yyyyMMddHHmmss')
    archiveFileName = "t9-admin-V1.0.0-" + formattedDate + ".zip"
    destinationDirectory = file("$projectDir/dist")
    from "$projectDir/dist/t9-admin"
}
