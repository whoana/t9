<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rose.mary.trace.database.mapper.m01.TraceMapper">
  	<!--
  	<cache/>
  	-->
	<insert id="insert">
		insert into TOP0501(             
			 INTEGRATION_ID                     
			,TRACKING_DATE                    
			,ORG_HOST_ID                      
			,PROCESS_ID                       
			,STATUS                           
			,NODE_TYPE                        
			,START_DATE                       
			,END_DATE                         
			,SEQ                              
			,HOST_ID                          
			,IP                               
			,OS                               
			,APP_NM                           
			,ERROR_CD                         
			,ERROR_MSG                        
			,RECORD_CNT                       
			,DATA_AMT                         
			,CMP                              
			,DIRECTORY                        
			,FILE_NM                          
			,FILE_SIZE                         
			,REG_DATE                         
		) values (                            
			 #{integrationId,	jdbcType=VARCHAR}
			,#{date,			jdbcType=VARCHAR}
			,#{originHostId,	jdbcType=VARCHAR}
			,#{processId,	 	jdbcType=VARCHAR}
			,#{status,		 	jdbcType=VARCHAR}
			,#{type,			jdbcType=VARCHAR}
			,#{processDate,	 	jdbcType=VARCHAR}
			,#{processEndDate,	jdbcType=VARCHAR}
			,#{seq,				jdbcType=NUMERIC}                                
			,#{hostId,		 	jdbcType=VARCHAR}
			,#{ip,			 	jdbcType=VARCHAR}
			,#{os,			 	jdbcType=VARCHAR}
			,#{app,			 	jdbcType=VARCHAR}
			,#{errorCode,	 	jdbcType=VARCHAR}
			,#{errorMessage,	jdbcType=VARCHAR}
			,#{recordCount,	 	jdbcType=NUMERIC}
			,#{dataSize,		jdbcType=NUMERIC}
			,#{compress,		jdbcType=VARCHAR}
			,''                               
			,''                               
			,0
			,#{regDate,		 	jdbcType=VARCHAR}
		)                                                                     
	</insert>
 
 
 	<select id="exist" resultType="int">
 		select count(*) 
 		  from TOP0501
 		 where INTEGRATION_ID = #{integrationId}
		   and TRACKING_DATE  = #{date}
		   and ORG_HOST_ID    = #{originHostId}
		   and PROCESS_ID     = #{processId}		 
 	</select>


	<update id="upsert" parameterType="rose.mary.trace.core.data.common.Trace">
		<choose>
			<when test="_databaseId == 'postgresql'">
				<![CDATA[
				with UPDATE_TABLE as (
					update TOP0501 
					set  
						 INTEGRATION_ID = #{integrationId,	jdbcType=VARCHAR}                   
						,TRACKING_DATE  = #{date,			jdbcType=VARCHAR}                 
						,ORG_HOST_ID    = #{originHostId,	jdbcType=VARCHAR}                 
						,PROCESS_ID     = #{processId,	 	jdbcType=VARCHAR}                 
						,STATUS         = #{status,		 	jdbcType=VARCHAR}                 
						,NODE_TYPE      = #{type,			jdbcType=VARCHAR}                 
						,START_DATE     = #{processDate,	jdbcType=VARCHAR}                 
						,END_DATE       = #{processEndDate,	jdbcType=VARCHAR}                 
						,SEQ            = #{seq,			jdbcType=NUMERIC}                 
						,HOST_ID        = #{hostId,		 	jdbcType=VARCHAR}                 
						,IP             = #{ip,			 	jdbcType=VARCHAR}                 
						,OS             = #{os,			 	jdbcType=VARCHAR}                 
						,APP_NM         = #{app,			jdbcType=VARCHAR}                 
						,ERROR_CD       = #{errorCode,	 	jdbcType=VARCHAR}                 
						,ERROR_MSG      = #{errorMessage,	jdbcType=VARCHAR}                 
						,RECORD_CNT     = #{recordCount,	jdbcType=NUMERIC}                 
						,DATA_AMT       = #{dataSize,		jdbcType=NUMERIC}                 
						,CMP            = #{compress,		jdbcType=VARCHAR}                 
						,DIRECTORY      = ''                                                
						,FILE_NM        = ''                                                
						,FILE_SIZE		= 0
						,REG_DATE		= #{regDate,		jdbcType=VARCHAR}
					where INTEGRATION_ID = #{integrationId}
					  and TRACKING_DATE  = #{date}
					  and ORG_HOST_ID    = #{originHostId}
					  and PROCESS_ID     = #{processId}	
					returning *
				)
				insert into TOP0501(             
					 INTEGRATION_ID                     
					,TRACKING_DATE                    
					,ORG_HOST_ID                      
					,PROCESS_ID                       
					,STATUS                           
					,NODE_TYPE                        
					,START_DATE                       
					,END_DATE                         
					,SEQ                              
					,HOST_ID                          
					,IP                               
					,OS                               
					,APP_NM                           
					,ERROR_CD                         
					,ERROR_MSG                        
					,RECORD_CNT                       
					,DATA_AMT                         
					,CMP                              
					,DIRECTORY                        
					,FILE_NM                          
					,FILE_SIZE                         
					,REG_DATE                         
				) 
				select 
					 #{integrationId,	jdbcType=VARCHAR}
					,#{date,			jdbcType=VARCHAR}
					,#{originHostId,	jdbcType=VARCHAR}
					,#{processId,	 	jdbcType=VARCHAR}
					,#{status,		 	jdbcType=VARCHAR}
					,#{type,			jdbcType=VARCHAR}
					,#{processDate,	 	jdbcType=VARCHAR}
					,#{processEndDate,	jdbcType=VARCHAR}
					,#{seq,				jdbcType=NUMERIC}
					,#{hostId,		 	jdbcType=VARCHAR}
					,#{ip,			 	jdbcType=VARCHAR}
					,#{os,			 	jdbcType=VARCHAR}
					,#{app,			 	jdbcType=VARCHAR}
					,#{errorCode,	 	jdbcType=VARCHAR}
					,#{errorMessage,	jdbcType=VARCHAR}
					,#{recordCount,	 	jdbcType=NUMERIC}
					,#{dataSize,		jdbcType=NUMERIC}
					,#{compress,		jdbcType=VARCHAR}
					,''                               
					,''                               
					,0
					,#{regDate,		 	jdbcType=VARCHAR}
				where not exists (select * from UPDATE_TABLE)
				]]>
			</when>
			<otherwise>
				<![CDATA[
				merge into TOP0501 a
				using DUAL
				on (
					a.INTEGRATION_ID 	= #{integrationId,	jdbcType=VARCHAR}                   
					and a.TRACKING_DATE = #{date,			jdbcType=VARCHAR}                 
					and a.ORG_HOST_ID   = #{originHostId,	jdbcType=VARCHAR}                 
					and a.PROCESS_ID    = #{processId,	 	jdbcType=VARCHAR}  
				)
				when matched then
				update set 					 
					 a.INTEGRATION_ID = #{integrationId,	jdbcType=VARCHAR}                   
					,a.TRACKING_DATE  = #{date,				jdbcType=VARCHAR}                 
					,a.ORG_HOST_ID    = #{originHostId,		jdbcType=VARCHAR}                 
					,a.PROCESS_ID     = #{processId,	 	jdbcType=VARCHAR}                 
					,a.STATUS         = #{status,		 	jdbcType=VARCHAR}                 
					,a.NODE_TYPE      = #{type,				jdbcType=VARCHAR}                 
					,a.START_DATE     = #{processDate,		jdbcType=VARCHAR}                 
					,a.END_DATE       = #{processEndDate,	jdbcType=VARCHAR}                 
					,a.SEQ            = #{seq,				jdbcType=NUMERIC}                 
					,a.HOST_ID        = #{hostId,		 	jdbcType=VARCHAR}                 
					,a.IP             = #{ip,			 	jdbcType=VARCHAR}                 
					,a.OS             = #{os,			 	jdbcType=VARCHAR}                 
					,a.APP_NM         = #{app,				jdbcType=VARCHAR}                 
					,a.ERROR_CD       = #{errorCode,	 	jdbcType=VARCHAR}                 
					,a.ERROR_MSG      = #{errorMessage,		jdbcType=VARCHAR}                 
					,a.RECORD_CNT     = #{recordCount,		jdbcType=NUMERIC}                 
					,a.DATA_AMT       = #{dataSize,			jdbcType=NUMERIC}                 
					,a.CMP            = #{compress,			jdbcType=VARCHAR}                 
					,a.DIRECTORY      = ''                                                
					,a.FILE_NM        = ''                                                
					,a.FILE_SIZE	  = 0
					,a.REG_DATE		  = #{regDate,			jdbcType=VARCHAR} 	  
				when not matched then 
				insert (             
					 INTEGRATION_ID                     
					,TRACKING_DATE                    
					,ORG_HOST_ID                      
					,PROCESS_ID                       
					,STATUS                           
					,NODE_TYPE                        
					,START_DATE                       
					,END_DATE                         
					,SEQ                              
					,HOST_ID                          
					,IP                               
					,OS                               
					,APP_NM                           
					,ERROR_CD                         
					,ERROR_MSG                        
					,RECORD_CNT                       
					,DATA_AMT                         
					,CMP                              
					,DIRECTORY                        
					,FILE_NM                          
					,FILE_SIZE                         
					,REG_DATE                         
				) values (  
					,#{integrationId,	jdbcType=VARCHAR}
					,#{date,			jdbcType=VARCHAR}
					,#{originHostId,	jdbcType=VARCHAR}
					,#{processId,	 	jdbcType=VARCHAR}
					,#{status,		 	jdbcType=VARCHAR}
					,#{type,			jdbcType=VARCHAR}
					,#{processDate,	 	jdbcType=VARCHAR}
					,#{processEndDate,	jdbcType=VARCHAR}
					,#{seq,				jdbcType=NUMERIC}
					,#{hostId,		 	jdbcType=VARCHAR}
					,#{ip,			 	jdbcType=VARCHAR}
					,#{os,			 	jdbcType=VARCHAR}
					,#{app,			 	jdbcType=VARCHAR}
					,#{errorCode,	 	jdbcType=VARCHAR}
					,#{errorMessage,	jdbcType=VARCHAR}
					,#{recordCount,	 	jdbcType=NUMERIC}
					,#{dataSize,		jdbcType=NUMERIC}
					,#{compress,		jdbcType=VARCHAR}
					,''                               
					,''                               
					,0
					,#{regDate,		 	jdbcType=VARCHAR}
				)
				]]>
			</otherwise>
		</choose>

	</update>

</mapper>